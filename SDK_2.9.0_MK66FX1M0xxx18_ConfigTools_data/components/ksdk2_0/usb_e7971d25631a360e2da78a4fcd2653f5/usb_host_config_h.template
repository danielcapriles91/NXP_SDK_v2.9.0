#ifndef __USB_HOST_CONFIG_H__
#define __USB_HOST_CONFIG_H__

/* Host Controller Enable */
/*!
 * @brief host khci instance count, meantime it indicates khci enable or disabled.
 *        - if 0, host khci driver is disabled.
 *        - if greater than 0, host khci driver is enabled.
 */
#define USB_HOST_CONFIG_KHCI (${(controllerNameCamelCase === "Khci") ? controllerIdx + 1 : 0}$U)

/*!
 * @brief host ehci instance count, meantime it indicates ehci enable or disabled.
 *        - if 0, host ehci driver is disabled.
 *        - if greater than 0, host ehci driver is enabled.
 */
#define USB_HOST_CONFIG_EHCI (${(controllerNameCamelCase === "Ehci") ? controllerIdx + 1 : 0}$U)

/*!
 * @brief host ohci instance count, meantime it indicates ohci enable or disabled.
 *        - if 0, host ohci driver is disabled.
 *        - if greater than 0, host ohci driver is enabled.
 */
#define USB_HOST_CONFIG_OHCI (${(controllerNameCamelCase === "Ohci") ? controllerIdx + 1 : 0}$U)

/*!
 * @brief host ip3516hs instance count, meantime it indicates ohci enable or disabled.
 *        - if 0, host ip3516hs driver is disabled.
 *        - if greater than 0, host ip3516hs driver is enabled.
 */
#define USB_HOST_CONFIG_IP3516HS (${(controllerNameCamelCase === "Ip3516Hs") ? controllerIdx + 1 : 0}$U)

/* Common configuration macros for all controllers */

/*!
 * @brief host driver instance max count.
 * for example: 2 - one for khci, one for ehci.
 */
#define USB_HOST_CONFIG_MAX_HOST \\
    (USB_HOST_CONFIG_KHCI + USB_HOST_CONFIG_EHCI + USB_HOST_CONFIG_OHCI + USB_HOST_CONFIG_IP3516HS)

/*!
 * @brief host pipe max count.
 * pipe is the host driver resource for device endpoint, one endpoint needs one pipe.
 * @remarks Depends on the total number of device interfaces. A HUB usually uses two pipes.
 */
#define USB_HOST_CONFIG_MAX_PIPES (2U + ${interfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP)

/*!
 * @brief host transfer max count.
 * transfer is the host driver resource for data transmission mission, one transmission mission needs one transfer.
 * @remarks Depends on the total number of device interfaces.
 */
#define USB_HOST_CONFIG_MAX_TRANSFERS (USB_HOST_CONFIG_MAX_PIPES)

/*!
 * @brief the max endpoint for one interface.
 * the max endpoint descriptor number that one interface descriptor contain.
 */
#define USB_HOST_CONFIG_INTERFACE_MAX_EP (4U)

/*!
 * @brief the max interface for one configuration.
 * the max interface descriptor number that one configuration descriptor can contain.
 */
#define USB_HOST_CONFIG_CONFIGURATION_MAX_INTERFACE (5U)

/*!
 * @brief the max power for one device.
 * the max power the host can provide for one device.
 * Expressed in 2 mA units (i.e. 250 = 500 mA).
 */
#define USB_HOST_CONFIG_MAX_POWER (${maxPower/2}$U)

/*!
 * @brief the max retries for enumeration.
 * retry time when enumeration fail.
 */
#define USB_HOST_CONFIG_ENUMERATION_MAX_RETRIES (3U)

/*!
 * @brief the max retries for enumeration setup stall.
 * the max times for one transfer can stall.
 */
#define USB_HOST_CONFIG_ENUMERATION_MAX_STALL_RETRIES (1U)

/*!
 * @brief the max NAK count for one transaction.
 * when nak count reach to the value, the transaction fail.
 */
#define USB_HOST_CONFIG_MAX_NAK (3000U)

/*! @brief Whether the transfer buffer is cache-enabled or not. */
#ifndef USB_HOST_CONFIG_BUFFER_PROPERTY_CACHEABLE
#define USB_HOST_CONFIG_BUFFER_PROPERTY_CACHEABLE (0U)
#endif
/*! @brief if 1, enable usb compliance test codes; if 0, disable usb compliance test codes. */
#define USB_HOST_CONFIG_COMPLIANCE_TEST (0U)

/*! @brief if 1, class driver clear stall automatically; if 0, class driver doesn\'t clear stall. */
#define USB_HOST_CONFIG_CLASS_AUTO_CLEAR_STALL (0U)

/* KHCI configuration */
#if ((defined USB_HOST_CONFIG_KHCI) && (USB_HOST_CONFIG_KHCI))

/*!
 * @brief khci dma align fix buffer size.
 */
#define USB_HOST_CONFIG_KHCI_DMA_ALIGN_BUFFER (64U)

#endif

/* EHCI configuration */
#if ((defined USB_HOST_CONFIG_EHCI) && (USB_HOST_CONFIG_EHCI))

/*!
 * @brief ehci periodic frame list size.
 * the value can be 1024, 512, 256, 128, 64, 32, 16 or 8.
 */
#define USB_HOST_CONFIG_EHCI_FRAME_LIST_SIZE (1024U)

/*!
 * @brief ehci QH max count.
 * @remarks Depends on the total number of device interfaces.
 */
#define USB_HOST_CONFIG_EHCI_MAX_QH (${interfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP)

/*!
 * @brief ehci QTD max count.
 */
#define USB_HOST_CONFIG_EHCI_MAX_QTD (USB_HOST_CONFIG_EHCI_MAX_QH)

/*!
 * @brief ehci ITD max count.
 */
#define USB_HOST_CONFIG_EHCI_MAX_ITD (${<code>
if (highSpeedSupported) {
    </code>}$USB_HOST_CONFIG_EHCI_MAX_SITD${<code>
}
else {
    </code>}$0U${<code>
}
</code>}$)

/*!
 * @brief ehci SITD max count.
 * @remarks Depends on the total number of device interfaces that can have isochronous endpoints.
 */
#define USB_HOST_CONFIG_EHCI_MAX_SITD (${potentiallyIsochronousInterfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP)

#endif

/* OHCI configuration */
#if ((defined USB_HOST_CONFIG_OHCI) && (USB_HOST_CONFIG_OHCI))

/*!
 * @brief ohci ED max count.
 * @remarks Depends on the total number of device interfaces.
 */
#define USB_HOST_CONFIG_OHCI_MAX_ED (${interfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP)

/*!
 * @brief ohci GTD max count.
 */
#define USB_HOST_CONFIG_OHCI_MAX_GTD (USB_HOST_CONFIG_OHCI_MAX_ED)

/*!
 * @brief ohci ITD max count.
 * @remarks Depends on the total number of device interfaces that can have isochronous endpoints (cannot be zero).
 */
#define USB_HOST_CONFIG_OHCI_MAX_ITD (${<code>
if (potentiallyIsochronousInterfaceCount > 0) {
    </code>}$${potentiallyIsochronousInterfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP${<code>
}
else {
    </code>}$1U${<code>
}
</code>}$)

#endif

/* OHCI configuration */
#if ((defined USB_HOST_CONFIG_IP3516HS) && (USB_HOST_CONFIG_IP3516HS))

/*!
 * @brief ohci PIPE max count.
 * @remarks Depends on the total number of device interfaces.
 */
#define USB_HOST_CONFIG_IP3516HS_MAX_PIPE (${interfaceCount}$U * USB_HOST_CONFIG_INTERFACE_MAX_EP)

/*!
 * @brief ohci ED max count.
 */
#define USB_HOST_CONFIG_IP3516HS_MAX_ATL (32U)

/*!
 * @brief ohci GTD max count.
 */
#define USB_HOST_CONFIG_IP3516HS_MAX_INT (USB_HOST_CONFIG_IP3516HS_MAX_ATL)

/*!
 * @brief ohci ITD max count.
 * @remarks Depends on the existence of device interfaces that can have isochronous endpoints.
 */
#define USB_HOST_CONFIG_IP3516HS_MAX_ISO (${<code>
if (potentiallyIsochronousInterfaceCount > 0) {
    </code>}$USB_HOST_CONFIG_IP3516HS_MAX_ATL${<code>
}
else {
    </code>}$0U${<code>
}
</code>}$)

#endif

/*!
 * @brief host HUB class instance count, meantime it indicates HUB class enable or disabled.
 *        - if 0, host HUB class driver is disabled.
 *        - if greater than 0, host HUB class driver is enabled.
 */
#define USB_HOST_CONFIG_HUB (${hubSupported}$U)

/*!
 * @brief host HID class instance count, meantime it indicates HID class enable or disabled.
 *        - if 0, host HID class driver is disabled.
 *        - if greater than 0, host HID class driver is enabled.
 */
#define USB_HOST_CONFIG_HID (${hidCount}$U)

/*!
 * @brief host MSD class instance count, meantime it indicates MSD class enable or disabled.
 *        - if 0, host MSD class driver is disabled.
 *        - if greater than 0, host MSD class driver is enabled.
 */
#define USB_HOST_CONFIG_MSD (${mscCount}$U)

/*!
 * @brief host CDC class instance count, meantime it indicates CDC class enable or disabled.
 *        - if 0, host CDC class driver is disabled.
 *        - if greater than 0, host CDC class driver is enabled.
 */
#define USB_HOST_CONFIG_CDC (${cicCount}$U)

/*!
 * @brief host AUDIO class instance count, meantime it indicates AUDIO class enable or disabled.
 *        - if 0, host AUDIO class driver is disabled.
 *        - if greater than 0, host AUDIO class driver is enabled.
 */
#define USB_HOST_CONFIG_AUDIO (${audioCount}$U)

/*!
 * @brief host PHDC class instance count, meantime it indicates PHDC class enable or disabled.
 *        - if 0, host PHDC class driver is disabled.
 *        - if greater than 0, host PHDC class driver is enabled.
 */
#define USB_HOST_CONFIG_PHDC (${phdcCount}$U)

/*!
 * @brief host printer class instance count, meantime it indicates printer class enable or disabled.
 *        - if 0, host printer class driver is disabled.
 *        - if greater than 0, host printer class driver is enabled.
 */
#define USB_HOST_CONFIG_PRINTER (${printerCount}$U)

#endif /* __USB_HOST_CONFIG_H__ */